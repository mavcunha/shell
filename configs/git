# vim: ft=zsh sw=2 ts=2 expandtab

# Enable substitution in the prompt.
setopt PROMPT_SUBST

# Enabling and setting git info var to be used in prompt config.
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git

precmd() {
  readonly cur_branch=$(git branch --show-current 2> /dev/null)

  [[ ${cur_branch} =~ (main|master|trunk) ]] && color="47" || color="184"

  zstyle ':vcs_info:git:*' formats "(%F{${color}}%b%f)"
  vcs_info
}

# This line obtains information from the vcs.
# formats vcs_info_msg_0_
PROMPT='%1/ ${vcs_info_msg_0_}%# '

############
# function shortcuts

# VCS: path to binaries
GIT_BIN=$(whence git)

git-author() {
  args=(${@})
  case ${1} in
    set)
      export GIT_AUTHOR_NAME=${args[@]:1:2}
      ;;
    unset)
      unset GIT_AUTHOR_NAME
      ;;
    show|get)
      echo "Current authors: ${GIT_AUTHOR_NAME:-$(git config --get user.name)}"
      ;;
    *)
      echo "Usage git-author [set AUTHORS|unset|show|get]"
      git-author show
      ;;
  esac
}

git-ssh-key() {
  arg=${@}
  case ${arg} in
    show)
      echo ${GIT_SSH_COMMAND##*/}
    ;;
    list)
      find ${HOME}/.ssh/ -name '*-github' -exec basename {} \;
    ;;
    help|-h|-?)
      echo "git-ssh-key [show|list|KEY]"
      echo "where KEY is the key name minus the -github suffix"
    ;;
    *)
      # if arg was given see if it can be found as a github key
      [[ -n ${arg} ]] && private_key=$(ls -1 ${HOME}/.ssh/${arg}-github)

      # we found a key with arg, so we set it up
      if [[ -n ${private_key} ]]; then
        export GIT_SSH_COMMAND="ssh -i ${private_key}"
      fi
      git-ssh-key show
    ;;
  esac
}

git-ssh-debug() {
  if [[ ${GIT_SSH_COMMAND} =~ "ssh -v.*" ]]; then
    echo "Disabling git ssh debug"
    export GIT_SSH_COMMAND=${GIT_SSH_COMMAND:s/ssh -v/ssh/}
  else
    echo "Enabling git ssh debug"
    if [[ -n ${GIT_SSH_COMMAND} ]]; then
      export GIT_SSH_COMMAND=${GIT_SSH_COMMAND:s/ssh/ssh -v/}
    else
      export GIT_SSH_COMMAND="ssh -v"
    fi
  fi
}

# main git shortcut with fn expansion
g() { _expand_last_arg_if_number ${GIT_BIN} "$@"; }
